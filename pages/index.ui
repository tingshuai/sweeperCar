<template>
  <ui-page class="map-wrap" top="0">
    <ui-view class="{{getViewClasses}}" top="0" left="0" bottom="0">
      <ui-view class="formItem">
          <ui-input placeholder="区域--"></ui-input>
          <ui-icon type="ring" size="32" color="#09BB07"></ui-icon>
      </ui-view>
      <ui-view class="formTextBtn">
          <ui-text>添加区域</ui-text>
      </ui-view>
      <ui-view class="formItem">
          <ui-text type="ring" size="32">区域编码</ui-text>
          <ui-input placeholder=""></ui-input>
          <ui-text type="ring" size="32">区域名称</ui-text>
          <ui-input placeholder=""></ui-input>          
      </ui-view>
      <ui-view class="formTextBtn">
          <ui-text>取消</ui-text>
          <ui-text>完成</ui-text>
      </ui-view>      
      <ui-view class="formItem">
          <ui-input placeholder="未清扫天数"></ui-input>
          <ui-icon type="ring" size="32" color="#09BB07"></ui-icon>
      </ui-view>
      <ui-view class="formItem">
        <ui-checkbox-group checkboxChange="boxChange">
          <ui-label class="checkbox" ui:for="{{items}}">
            <ui-checkbox value="{{item.name}}" checked="{{ item.checked }}" ></ui-checkbox>{{item.value}}
          </ui-label>
        </ui-checkbox-group>
      </ui-view>          
    </ui-view>
    <ui-view id="ui-app" bindtap="tapWindow">
          <ui-map 
            id="map" 
            map-service="tencent"
            longitude="{{longitude}}" 
            latitude="{{latitude}}"
            scale="{{scale}}"
            include-points="{{ markers }}"
            show-location="{{showLocation}}"
            markers="{{markers}}"
            controls="{{controls}}"
            bindcontroltap="controltap"
            bindregionchange="regionchange"
            bindcallouttap="callouttap"
            style="width:100%;height:100vh;">
          </ui-map>
          <ui-view class="header">
            <ui-view class="h_left">
              sdf
            </ui-view>
            <ui-view class="h_center">
              标题
            </ui-view>
            <ui-view class="h_right">
              <ui-text>退出</ui-text>
            </ui-view>
          </ui-view>
          <ui-view class="charts">
            <ui-view id="c_left">
              <ui-bar
                    value="{{bar2.data}}"
                    height="{{ height*0.2 }}"
                    width="{{width/2}}"
                    is-animated="true"
                    tooltip="true"
                    has-percentage="false"
                    between-bars-padding = 0.3
                    percentage-label-margin="{{1}}"
                    color-schema="{{bar2.colorSchema}}"
                    y-axis-padding-between-chart="{{12}}"
                    >
              </ui-bar>
            </ui-view>
            <ui-view id="c_right" ref="c_right">
              <ui-view style="text-align: center">
                <ui-donut
                    value="{{donut.data}}"
                    width="{{ width/2 }}"
                    height="{{ height*0.2 }}"
                    external-radius="50"
                    internal-radius="30"
                    is-animated="true"
                    radius-hover-offset="0"
                    color-schema="{{donut.colorSchema}}"
                    highlight-slice-by-id="{{2}}">
                </ui-donut>
                <!-- <ui-legend
                    value="{{legendData.legend}}"
                    width="{{width/2}}"
                    height="50"
                    is-horizontal="{{true}}"
                    is-animated="{{true}}"
                    text-size="{{legendData.textSize}}"
                    text-letter-spacing ="0.5"
                    color-schema="{{legendData.colorSchema}}">
                </ui-legend>                 -->
            </ui-view>
            </ui-view>
          </ui-view>
    </ui-view>
  </ui-page>
</template>

<script>
// mapDemo.js
// mapDemo02.js
var pathIcon = require('#/images/map/path.png')
let app = ui.getApp().globalData;
export default {
  config: {
    "navigationBarTitleText": "自定义标点和气泡",
    "touchSlideMenu": true
  },
  data () {
    return {
      "showSlideMenu":true,
      latitude: 39.855060,
      longitude: 116.368650,
      scale: 5,
      showLocation: true,
      mapCtx: null,
      height: ui.WIN_HEIGHT,
      width: ui.WIN_WIDTH,
      isExpand:true,
      items: [
        { name: 'USA', value: '美国' },
        { name: 'CHN', value: '中国', checked: true },
        { name: 'BRA', value: '巴西', checked: true }
      ],  
      donut: {
        data: [],
        colorSchema: ['#679DFF', '#FFA067'],
        internalRadius:0
      },
      legendData: {
        legend: [
          {
            id: 1,
            name: '正常电压'
          },
          {
            id: 2,
            name: '低电压'
          }
        ],
        textSize: 14,
        colorSchema: ['#679DFF', '#FFA067']
      },
      latitude: 39.855060,
      longitude: 116.368650,
      scale: 16,
      showLocation: true,
      mapCtx: null,
      markers: [],
      controls: [{
        id: 1,
        iconPath: require('#/images/map/location.png'),
        clickable: true,
        position: {
          left: 15,
          top: 570,
          width: 64,
          height: 64
        }
      }],
      controls: [{
        id: 1,
        iconPath: require('#/images/map/location.png'),
        clickable: true,
        position: {
          left: 15,
          top: ui.DEFAULT_CONTENT_HEIGHT - 100,
          width: 64,
          height: 64
        }
      }],
      circles: [{
        latitude: 39.855060,
        longitude: 116.368650,
        color: '#0000FF33',
        fillColor: '#0000FF33',
        radius: 100,
        strokeWidth: 1
      }],
      bar2:{
        colorSchema: ['#679DFF', '#FFA067'],
        data: []
      }       
    }
  },
  created () {
    // this.setData({
    //   mapCtx: ui.createMapContext('map')

    // })
  },
  mounted () {
    let that = this;
    this.mapCtx = ui.createMapContext('map')
    ui.getStorage({
      key:"userMsg",
      success(res){
        app.token = res.data.token;
        app.userMsg = res.data;
        that.getPosition();
        that.getChartData({//请求异常图.
          type:"normal"
        })
        that.getChartData({//请求电压图
          type:"voltage"
        })
      },
      fail(res){
        ui.navigateTo({
          url:'/pages/login'
        })
      }
    })
  },
  watch:{

  },
  computed:{
    getViewClasses (n) {
      let classes = ['menu']
      classes.push(this.isExpand ? 'expand' : '')
      debugger;
      return classes
    }
  },
  methods: {
    tapWindow(e){
      this.isExpand = !this.isExpand;
      console.log( this.isExpand )
    },
    controltap (e) {
      if (e.controlId === 1) {
        this.mapCtx.moveToLocation()
      }
    },
    regionchange () {

    },
    callouttap (e) {
      if (e.markerId === 2) return
      if (e.markerId === 1) {
        this.toSysMap(39.855060, 116.368650, '北京引领视觉科技有限公司')
      }
      if (e.markerId === 3) {
        this.toSysMap(39.858620, 116.369580, '右安门翠林小区二里')
      }
    },
    toSysMap (lat, lng, names) {
      ui.openSysMap({
        latitude: lat,
        longitude: lng,
        name: names,
        success: function (res) {
        },
        fail: function (res) {
        },
        complete: function (res) {
        }
      })
    },
    go () {
    },
		getPosition(){//获取清扫机位置
			let that = this;
			this.http({
				url:'cars/macPosition',
				method:"GET",
				scb(res){
					if( res.data.code == 200 ){
            let _marker = [];
            res.data.data.forEach((val,i,arr) => {
              _marker.push({
                id:i,
                longitude:val.longitude,
                latitude:val.latitude
              })
            });
            that.longitude = _marker[0].longitude;
            that.latitude = _marker[0].latitude;
            that.markers = _marker;
            return;
					}
				},
				fcb(res){
					console.log( "errmmm", res)
				}
			})
		},
		getChartData(obj){//获取设备状态数量
			let that = this;
			this.http({
				url:'cars/getVoltageStatic',
				method:"GET",
				params:{
					areaNo:"",
					type:obj.type
				},
				scb(res){
					if( res.data.code == 200 ){
            if( obj.type == "voltage" ){//电压图
              let _data = [{
                            quantity: res.data.data.lowVoltage,
                            name: '低电压',
                            id: 1
                          },{
                            quantity: res.data.data.total - res.data.data.lowVoltage,
                            name: '正常',
                            id: 2
                          }]
              that.donut.data = _data;
            }else{//异常图
              let _data = [{
                value:res.data.data.errors,
                name:"异常设备",
              },{
                value:res.data.data.total - res.data.data.errors,
                name:"正常设备",
              }]
              that.bar2.data = _data;
            }
          };
          return;
				},
				fcb(res){
          console.log( "errmmm", res)
          return
				}
			})				
		}
  }
}

</script>

<style lang="less">
  // mapDemo.less
  .menu{
    background-color: white;
    height: 100%;
    z-index: 10000;
    position: fixed;
    width: 0;
    overflow: hidden;
    transition: all 0.2s;
  }
  .expand{
    width: 48vw;
    background-color: white;
  }
.c-wrap {
  display: flex;
  justify-content: space-between;
  align-items: center;
  
}
.info {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  margin-right: 25px;
  p {
      padding: 0 5px;
  }
}
.a-name {
  font-size: 14px;
  color: #000;
  line-height: 20px;
}
.a-info {
  font-size: 12px;
  color: #000;
  line-height: 16px;
}
.click {
  position: absolute;
  left: calc(100% - 6px);
  top: 0;
  width: 50px;
  height: 100%;
  background-color: #FF6600;
  line-height: 48px;
  color: #fff;
  text-align: center;
  font-size: 16px;
  border-radius: 0 10px 10px 0; 
}

.s-map {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.s-name {
  margin-right: 10px;
  font-size: 16px;
}
.btn{
  height: 25px;
  padding: 0 5px;
  background-color: #3783fe;
  border-radius: 5px;
  display: flex;
  justify-content: center;
  align-items: center;
  img {
      width: 16px;
      height: 16px;
      margin-right: 3px;
  }
  span {
      font-size: 13px;
      color: #fff;
      
  }
}
.header{
	display: flex;
	justify-content: space-between;
	top: 20px;
	height: 7vh;
	background-color: white;
	align-items: center;
	z-index: 80;
	position: absolute;
	width: 100%;
}
.charts{
	height: 20vh;
	background-color: white;
	width: 100%;
	position: absolute;
	bottom: 0;
	display: flex;
  z-index: 1000;
  justify-content: space-between;
	#c_left{
		width: 50%;
		background-color: white;
		height: 100%;
		display: inline-block;
	}
	#c_right{
		width: 50%;
		background-color: white;
		height: 100%;
		display: inline-block;
	}
}
</style>
  